#!/bin/sh


# This script was tested on FreeBSD 13.0-RELEASE.


# Program path vars.
PERL_PROG="/usr/local/bin/perl"
DATE_PROG="/bin/date"
# We use the echo built into /bin/sh as /bin/echo doesn't support -e.
ECHO_PROG="echo"
CD_PROG="cd" 			# /usr/bin/cd doesn't affect shell.
MKDIR_PROG="/bin/mkdir"
SCROT_PROG="/usr/local/bin/scrot"
EXIT_PROG="exit"


# General vars.
EXTENSION=".png"
SAVE_FILE_PATH="${HOME}/Photos/screenshots"
# Colour vars.
NO_COLOR='\033[0m'
RED='\033[0;31m'		# Indicates bad things :'(
GREEN='\033[0;32m'		# Indicates all is well in the world :)


genFileName()
{   # No error checking is done in this function and so we consider it to be
    # unfinished.
    # Pearl script by jwd taken from: https://stackoverflow.com/questions/5179559/how-get-the-time-in-milliseconds-in-freebsd
    EPOCH_TIME=`$PERL_PROG -MTime::HiRes=gettimeofday -MPOSIX=strftime -e \
'($s,$us) = gettimeofday(); printf "%d-%06d\n", $s, $us'`
    DATE_TIME=`$DATE_PROG | tr ' ' '-'`

    $ECHO_PROG "$EPOCH_TIME--$DATE_TIME$EXTENSION"
}


# Checks if $SAVE_FILE_PATH exists and creates it if it doens't. If it doens't
# exist and cannot be created exit.
createSaveFilePath()
{
    if [ -d $SAVE_FILE_PATH ]	# Check if $SAVE_FILE_PATH exists.
    then
	$ECHO_PROG -e "${GREEN}Path exists!${NO_COLOR}"
    else
	$MKDIR_PROG $SAVE_FILE_PATH
	if [ $? ]		# Check return value.
	then
	    $ECHO_PROG -e "${GREEN}Created \"${SAVE_FILE_PATH}\".${NO_COLOR}"
	else
	    $ECHO_PROG -e "${RED}Error: couldn't create \"${SAVE_FILE_PATH}\".\
 Exiting...${NO_COLOR}"
	    $EXIT_PROG		# Abort script!
	fi
    fi
}


# CDs into $SAVE_FILE_PATH and runs SCROT_PROG.
# Exits if either of these operations fail.
takeScreenShot()
{				# Enter $SAVE_FILE_PATH.
    $CD_PROG $SAVE_FILE_PATH
    if [ $? ]		# Check return value.
    then
	$ECHO_PROG -e "${GREEN}Entered \"${SAVE_FILE_PATH}\".${NO_COLOR}"
    else
	$ECHO_PROG -e "${GREEN}Error: couldn't entered \"${SAVE_FILE_PATH}\". \
Exiting...${NO_COLOR}"
	$EXIT_PROG		# Abort script!
    fi

    # Get file name.
    FILE_NAME=`genFileName`
    # Take screenshot!
    $SCROT_PROG $FILE_NAME
    if [ $? ]		# Check return value.
    then
	$ECHO_PROG -e "${GREEN}Screenshot taken!.${NO_COLOR}"
    else
	$ECHO_PROG -e "${GREEN}Error: couldn't take screenshot!.${NO_COLOR}"
	$EXIT_PROG		# Abort script!
    fi
}


main()
{
    createSaveFilePath
    takeScreenShot
}


main				# Call main.
